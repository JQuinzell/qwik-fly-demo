---
Parameters:
  ECRImageURI:
    Type: String
    Description: URI of the ECR image (e.g., 123456789012.dkr.ecr.region.amazonaws.com/my-repo:latest).
Resources:

  DefaultVpc:
    Type: AWS::EC2::VPC
    Properties:
      Filters:
        - Name: "isDefault"
          Values: ["true"]

  DefaultSubnets:
    Type: "AWS::EC2::Subnet"
    Properties:
      Filters:
        - Name: "vpc-id"
          Values: [!Ref DefaultVpc]

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub '${AWS::StackName}-cluster'

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-ecsTaskExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSContainerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-ecsContainerRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: ECRAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: '*'

  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${AWS::StackName}-ecsSecurityGroup'
      GroupDescription: Security group for ECS tasks.
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${AWS::StackName}-taskDefinition'
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSContainerRole.Arn
      ContainerDefinitions:
        - Name: nodejs-app
          Image: !Ref ECRImageURI
          Essential: true
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: !Sub '${AWS::StackName}-service'
      TaskDefinition: !Ref ECSTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups:
            - !Ref ECSSecurityGroup

Outputs:
  ClusterName:
    Description: Name of the ECS cluster.
    Value: !Ref ECSCluster
  ServiceName:
    Description: Name of the ECS service.
    Value: !Ref ECSService
  TaskDefinitionArn:
    Description: ARN of the ECS task definition.
    Value: !Ref ECSTaskDefinition